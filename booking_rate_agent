#! /usr/bin/env ruby

# New Relic plugin to monitor FareHarbor booking rate.

require "rubygems"
require "bundler/setup"
require "newrelic_plugin"
require "pg"

module BookingRateAgent

  class Agent < NewRelic::Plugin::Agent::Base

    agent_guid "com.fareharbor.booking_rate"
    agent_version "1.0.1"
    agent_config_options :databases, :environment, :metrics
    agent_human_labels("Booking Rate Agent") { "#{environment}" }

    def poll_cycle
      connections = {}

      for db_name in databases.keys do
        db = databases[db_name]
        connections[db_name] = PGconn.open(
          :host => db["host"],
          :port => db["port"],
          :dbname => db["database"],
          :user => db["username"],
          :password => db["password"],
        )
      end

      for metric in metrics do
        metric_total = 0
        connection = connections[metric.fetch('database', 'replica')]
        response = connection.exec(metric['query'])

        # This assumes the query uses 1 aggregate and groups by 0 or 1 values.
        if response.nfields == 1 and response.ntuples == 1
          metric_total = response.getvalue(0, 0).to_i
        else
          for i in 0..response.ntuples - 1
            aggregate_value = response.getvalue(i, 0).to_i
            group = response.getvalue(i, 1)
            metric_total += aggregate_value
            report_metric "BookingRate/#{metric['name']}_#{group}", "Value", aggregate_value
          end
        end

        report_metric "BookingRate/#{metric['name']}_total", "Value", metric_total
      end

      connections.each do |_, conn|
        conn.close()
      end
    end

  end

  # Register this agent with the component.
  NewRelic::Plugin::Setup.install_agent :booking_rate, BookingRateAgent

  # Launch the agent; this never returns.
  NewRelic::Plugin::Run.setup_and_run

end
